<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>srp_powerup_mask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///direccion en la que entras  1-up 2-right 3-down 4-left
if global.puerta == 0 //si no existe puerta previa
{
    puertas = choose(1,2,3,4)//de 1 a 4 posibles puertas a crear
    
    if puertas == 1{ //solo 1 puerta
        pos = choose(2,1,3,4)
        if pos == 1{
            instance_create(x,y,obj_puerta_up)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 4{
            instance_create(x,y,obj_puerta_left)
        }
    }
    if puertas == 2{ // dos puertas
        pos = choose(1,2,3,4,5,6)
         if pos == 1{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 4{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 5{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 6{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_right)
        }
        
    }
    if puertas == 3{ // tres puertas
        pos = choose(1,2,3)
         if pos == 1{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_left)
            instance_create(x,y,obj_puerta_up)
        }
    }
    if puertas == 4{ // cuatro puertas
        instance_create(x,y,obj_puerta_up)
        instance_create(x,y,obj_puerta_down)
        instance_create(x,y,obj_puerta_left)
        instance_create(x,y,obj_puerta_right)
    }
}

if global.puerta == 1 //salimos por la puerta de arriba
{
    puertas = choose(1,2,3)//de 1 a 3 posibles puertas a crear
    
    if puertas == 1{ //solo 1 puerta
        pos = choose(1,2,3)
        if pos == 1{
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_up)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_left)
            }
    }
    if puertas == 2{ // dos puertas
        pos = choose(1,2,3)
         if pos == 1{
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_up)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_left)
        }
        
    }
    if puertas == 3{ // tres puertas
         instance_create(x,y,obj_puerta_left)
         instance_create(x,y,obj_puerta_right)
         instance_create(x,y,obj_puerta_up) 
    }
}

if global.puerta == 2 //salimos por la puerta de derecha
{
    puertas = choose(1,2,3)//de 1 a 3 posibles puertas a crear
    
    if puertas == 1{ //solo 1 puerta
        pos = choose(2,1,3)
        if pos == 1{
            instance_create(x,y,obj_puerta_up)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_right)
            }
    }
    if puertas == 2{ // dos puertas
        pos = choose(1,2,3)
         if pos == 1{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_right)
        }
        
    }
    if puertas == 3{ // tres puertas
         instance_create(x,y,obj_puerta_right)
         instance_create(x,y,obj_puerta_up)
         instance_create(x,y,obj_puerta_down)  
    }
}

if global.puerta == 3 //salimos por la puerta de abajo
{
    puertas = choose(1,2,3)//de 1 a 3 posibles puertas a crear
    
    if puertas == 1{ //solo 1 puerta
        pos = choose(2,1,3)
        if pos == 1{
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_left)
            }
    }
    if puertas == 2{ // dos puertas
        pos = choose(1,2,3)
         if pos == 1{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_right)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_down)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_right)
            instance_create(x,y,obj_puerta_left)
        }
        
    }
    if puertas == 3{ // tres puertas
         instance_create(x,y,obj_puerta_left)
         instance_create(x,y,obj_puerta_down)
         instance_create(x,y,obj_puerta_right)  
    }
}

if global.puerta == 4 //salimos por la puerta de izquierda
{
    puertas = choose(1,2,3)//de 1 a 3 posibles puertas a crear
    
    if puertas == 1{ //solo 1 puerta
        pos = choose(2,1,3)
        if pos == 1{
            instance_create(x,y,obj_puerta_up)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_down)
            }
    }
    if puertas == 2{ // dos puertas
        pos = choose(1,2,3)
         if pos == 1{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_left)
        }
        if pos == 2{
            instance_create(x,y,obj_puerta_up)
            instance_create(x,y,obj_puerta_down)
        }
        if pos == 3{
            instance_create(x,y,obj_puerta_left)
            instance_create(x,y,obj_puerta_down)
        }
        
    }
    if puertas == 3{ // tres puertas
         instance_create(x,y,obj_puerta_down)
         instance_create(x,y,obj_puerta_up)
         instance_create(x,y,obj_puerta_left)  
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///generar salida

if global.puerta == 1{
    instance_create(room_width / 2,room_height -18,obj_puerta_return)
}
if global.puerta == 2{
    instance_create(18,room_height / 2,obj_puerta_return)
}
if global.puerta == 3{
    instance_create(room_width / 2,18,obj_puerta_return)
}
if global.puerta == 4{
    instance_create(room_width - 18,room_height / 2,obj_puerta_return)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///puntos
global.puntos += 20
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///crear paredes 
var c,f; // c= 15 f = 9 
for (f=8;f&gt;-1;f--)
{
    for (c=14;c&gt;-1;c--)
    {
        xx = c*32
        yy = f*32
        if f == 0 || f == 8 || c == 0 || c == 14
        { 
            instance_create(xx,yy,obj_pared)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
